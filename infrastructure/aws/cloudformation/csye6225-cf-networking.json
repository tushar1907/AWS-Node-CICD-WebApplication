{
  "Description" : "Networking Stack",
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Parameters" : {
    "stackname" : {
      "Description" : "Stack Name",
      "Type" : "String",
      "Default" : "stack01"
    }
  },
  "Resources" : {

      "vpc1" : {
        "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock" : "10.0.0.0/16",
          "EnableDnsSupport" : true,
          "EnableDnsHostnames" : true,
          "InstanceTenancy" : "default",
          "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-vpc"]] }}]
        }
      },

      "ig1" : {
        "Type" : "AWS::EC2::InternetGateway",
        "Properties" : {
        "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-InternetGateway"]] }}]
        }
      },

      "vpc1Attch1" : {
        "Type" : "AWS::EC2::VPCGatewayAttachment",
        "Properties" : {
          "InternetGatewayId" : {"Ref" : "ig1"},
          "VpcId" : {"Ref" : "vpc1"}
          }
        },

        "routeTable1" : {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId" : {"Ref" : "vpc1"},
            "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-public-route-table"]] }}]
          }
        },

        "route1" : {
          "Type" : "AWS::EC2::Route",
          "Properties" : {
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : {"Ref" : "ig1"},
            "RouteTableId" : {"Ref" : "routeTable1"}

          }
        },

       "myPubSubnet1" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId" : { "Ref" : "vpc1" },
          "CidrBlock" : "10.0.1.0/24",
          "AvailabilityZone" : "us-east-1a",
          "MapPublicIpOnLaunch" : true,
          "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-ec2-pub-subnet1"]] }}]
        }
       },
      "myPubSubnetRouteTableAssociation1" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
          "SubnetId" : { "Ref" : "myPubSubnet1" },
          "RouteTableId" : { "Ref" : "routeTable1" }
       }
    },
    "myPubSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "vpc1" },
        "CidrBlock" : "10.0.3.0/24",
        "AvailabilityZone" : "us-east-1b",
        "MapPublicIpOnLaunch" : true,
        "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-ec2-pub-subnet2"]] }}]
      }
     },
    "myPubSubnetRouteTableAssociation2" : {
     "Type" : "AWS::EC2::SubnetRouteTableAssociation",
     "Properties" : {
        "SubnetId" : { "Ref" : "myPubSubnet2" },
        "RouteTableId" : { "Ref" : "routeTable1" }
     }
  },

  "myPubSubnet3" : {
    "Type" : "AWS::EC2::Subnet",
    "Properties" : {
      "VpcId" : { "Ref" : "vpc1" },
      "CidrBlock" : "10.0.5.0/24",
      "AvailabilityZone" : "us-east-1c",
      "MapPublicIpOnLaunch" : true,
      "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-ec2-pub-subnet3"]] }}]
    }
   },
  "myPubSubnetRouteTableAssociation3" : {
   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
   "Properties" : {
      "SubnetId" : { "Ref" : "myPubSubnet3" },
      "RouteTableId" : { "Ref" : "routeTable1" }
   }
},
        "routeTable2" : {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId" : {"Ref" : "vpc1"},
            "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-private-route-table"]] }}]
          }
        },
        "myPriSubnet1" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
           "VpcId" : { "Ref" : "vpc1" },
           "CidrBlock" : "10.0.2.0/24",
           "AvailabilityZone" : "us-east-1a",
           "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-private-subnet1"]] }}]
         }
        },
        "myPriSubnet2" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
           "VpcId" : { "Ref" : "vpc1" },
           "CidrBlock" : "10.0.4.0/24",
           "AvailabilityZone" : "us-east-1b",
           "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-private-subnet2"]] }}]
         }
        },
        "myPriSubnet3" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
            "VpcId" : { "Ref" : "vpc1" },
            "CidrBlock" : "10.0.6.0/24",
            "AvailabilityZone" : "us-east-1c",
            "Tags" : [{"Key" : "Name", "Value" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-private-subnet3"]] }}]
          }
         },
        "myPriSubnetRouteTableAssociation1" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "myPriSubnet1" },
            "RouteTableId" : { "Ref" : "routeTable2" }
         }
      },
      "myPrivSubnetRouteTableAssociation2" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
          "SubnetId" : { "Ref" : "myPriSubnet2" },
          "RouteTableId" : { "Ref" : "routeTable2" }
       }
    },
    "myPrivSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
         "SubnetId" : { "Ref" : "myPriSubnet3" },
         "RouteTableId" : { "Ref" : "routeTable2" }
      }
   },

    "DBSubnetGroup" : {
 "Type" : "AWS::RDS::DBSubnetGroup",
 "Properties" : {
    "DBSubnetGroupDescription" : "DB Subnet Group",
    "DBSubnetGroupName" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-db-subnetgroup"]] },
    "SubnetIds" : [ {"Ref" : "myPriSubnet1"},{"Ref" : "myPriSubnet2"}]

 }
},
      "WebServerSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
        "GroupName" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-webapp-secuitygroup"]] },
        "GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443, NodeJS access via port 3000",
        "VpcId": { "Ref" : "vpc1" },
        "SecurityGroupIngress": [
            {
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            },
            {
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            },
            {
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            },
            {
                "IpProtocol": "tcp",
                "FromPort": "3000",
                "ToPort": "3000",
                "CidrIp": "0.0.0.0/0"
            }
        ]
    }
},
"DBEC2SecurityGroup": {
"Type" : "AWS::EC2::SecurityGroup",
"Properties" : {
   "GroupName" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-db-secuitygroup"]] },
   "GroupDescription" : "allows ingress traffic only from Web App",
   "SecurityGroupIngress" : [
        {
       "Description" : "ingress rule on 3306",
       "FromPort" : "3306",
       "IpProtocol" : "tcp",
       "SourceSecurityGroupId" : { "Ref" : "WebServerSecurityGroup"},
       "ToPort" : "3306"
     }
      ],
   "VpcId" : { "Ref" : "vpc1" }
  }
 }
},

  "Outputs" : {

      "vpcId" : {

          "Description" : "The resource id of the created vpc",
          "Value" : {
              "Ref" : "vpc1"
          }
      },
      "ec2Subnet" : {

          "Description" : "The resource id of the subnet for EC2",
          "Value" : {
              "Ref" : "myPubSubnet1"

          }

      },
      "ec2SecurityGroup" : {
          "Description" : "The resource id of the Security Group for EC2",
          "Value" : {
              "Ref" : "WebServerSecurityGroup"

          }
      }

    }
  }


